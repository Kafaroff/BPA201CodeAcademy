using System;
using System.Linq;

class Device
{
    public string brand;
    public string model;
    public double screenSize;
    public int batteryLevel;
    public double price;
    public double salePrice;
    public int saleCount;

    public Device(string brand, string model, double screenSize, int batteryLevel, double price, double salePrice, int saleCount)
    {
        this.brand = brand;
        this.model = model;
        this.screenSize = screenSize;
        this.batteryLevel = batteryLevel;
        this.price = price;
        this.salePrice = salePrice;
        this.saleCount = saleCount;
    }

    public string CalculateProfit()
    {
        double profit = (salePrice - price) * saleCount;
        if (profit > 0)
            return $"Elde olunan gelir miqdari: {profit}";
        else
            return $"Zerer olunan miqdar: {-profit}";
    }

    public void DisplayBatteryLevel()
    {
        Console.WriteLine($"{brand} {model} - Cari batareya seviyyesi: {batteryLevel}%");
    }

    public void DisplayDetails()
    {
        Console.WriteLine("------ Cihaz Melumatları ------");
        Console.WriteLine($"Brand: {brand}");
        Console.WriteLine($"Model: {model}");
        Console.WriteLine($"Ekran Ölçüsü: {screenSize}\"");
        Console.WriteLine($"Batareya seviyyesi: {batteryLevel}%");
        Console.WriteLine($"Qiymet: {price}$");
        Console.WriteLine($"Satış Qiymeti: {salePrice}$");
        Console.WriteLine($"Satış sayı: {saleCount} eded");
        Console.WriteLine(CalculateProfit());
        Console.WriteLine("---------------------------------\n");
    }

    public static string[] FilterByPrice(Device[] devices, double minPrice)
    {
        return devices
                .Where(d => d.price >= minPrice)
                .Select(d => d.model)
                .ToArray();
    }

 
    public static int FilterByName(Device[] devices, string name)
    {
        return devices.Count(d => d.model.Equals(name, StringComparison.OrdinalIgnoreCase));
    }
}


class Phone : Device
{
    public bool isSmart;

    public Phone(string brand, string model, double screenSize, int batteryLevel, double price, double salePrice, int saleCount, bool isSmart)
        : base(brand, model, screenSize, batteryLevel, price, salePrice, saleCount)
    {
        this.isSmart = isSmart;
    }
}


class Laptop : Device
{
    public bool isRGBkeyboard;

    public Laptop(string brand, string model, double screenSize, int batteryLevel, double price, double salePrice, int saleCount, bool isRGBkeyboard)
        : base(brand, model, screenSize, batteryLevel, price, salePrice, saleCount)
    {
        this.isRGBkeyboard = isRGBkeyboard;
    }
}


class Program
{
    static void Main()
    {
        Device[] devices = new Device[]
        {
            new Device("Samsung", "Galaxy S24", 6.8, 90, 1200, 1600, 50),
            new Device("Apple", "MacBook Air M3", 13.6, 100, 1800, 2300, 30),
            new Device("Xiaomi", "Pad 6 Pro", 11.0, 85, 500, 650, 40),
            new Device("Huawei", "Watch GT 4", 1.5, 95, 250, 350, 70),
            new Device("LG", "OLED C3", 55, 0, 1500, 2100, 25)
        };


        string[] expensiveDevices = Device.FilterByPrice(devices, 1000);
        Console.WriteLine("Qiymeti 1000$-dan yuxarı olan cihazlar:");
        foreach (var model in expensiveDevices)
        {
            Console.WriteLine(model);
        }

        int countIphone = Device.FilterByName(devices, "Galaxy S24");
        Console.WriteLine($"\nModeli 'Galaxy S24' olan cihazların sayı: {countIphone}");
    }
}
